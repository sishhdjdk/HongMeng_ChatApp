/**
 * ÊúãÂèãÂúàËØ¶ÊÉÖÈ°µ
 * ÂäüËÉΩÔºöÊü•ÁúãÊúãÂèãÂúàÂä®ÊÄÅÂàóË°®
 */
import router from '@ohos.router'

class Moment {
  id: number
  userName: string
  avatar: string
  content: string
  images: string[]
  time: string
  likeCount: number
  commentCount: number

  constructor(id: number, userName: string, avatar: string, content: string, images: string[], time: string, likeCount: number, commentCount: number) {
    this.id = id
    this.userName = userName
    this.avatar = avatar
    this.content = content
    this.images = images
    this.time = time
    this.likeCount = likeCount
    this.commentCount = commentCount
  }
}

@Entry
@Component
struct MomentsDetailPage {
  @State momentList: Moment[] = [
    new Moment(1, 'Âº†‰∏â', '', '‰ªäÂ§©Â§©Ê∞îÁúüÂ•ΩÔºÅ', [''], '2Â∞èÊó∂Ââç', 15, 3),
    new Moment(2, 'ÊùéÂõõ', '', 'ÂàÜ‰∫´‰∏ÄÂº†ÁæéÂõæ', ['', '', ''], '5Â∞èÊó∂Ââç', 28, 7),
    new Moment(3, 'Áéã‰∫î', '', 'Âë®Êú´ÊÑâÂø´~', [], 'Êò®Â§©', 10, 2),
  ]

  @Builder
  MomentItem(moment: Moment) {
    Column() {
      Row() {
        // Â§¥ÂÉè
        Text(moment.userName.substring(0, 1))
          .width(50)
          .height(50)
          .borderRadius(25)
          .backgroundColor('#07C160')
          .fontColor('#FFFFFF')
          .fontSize(20)
          .textAlign(TextAlign.Center)
          .margin({ right: 12 })

        Column() {
          // Áî®Êà∑Âêç
          Text(moment.userName)
            .fontSize(16)
            .fontWeight(FontWeight.Medium)
            .fontColor('#576B95')
            .margin({ bottom: 8 })

          // Âä®ÊÄÅÂÜÖÂÆπ
          Text(moment.content)
            .fontSize(15)
            .margin({ bottom: 8 })

          // ÂõæÁâáÔºàÂ¶ÇÊûúÊúâÔºâ
          if (moment.images.length > 0) {
            Grid() {
              ForEach(moment.images, (image: string, index: number) => {
                GridItem() {
                  Text('üì∑')
                    .width('100%')
                    .aspectRatio(1)
                    .fontSize(40)
                    .textAlign(TextAlign.Center)
                    .backgroundColor('#F5F5F5')
                    .borderRadius(4)
                    .onClick(() => {
                      router.pushUrl({ url: 'pages/ImagePreviewPage' })
                    })
                }
              })
            }
            .columnsTemplate('1fr 1fr 1fr')
            .columnsGap(8)
            .rowsGap(8)
            .width(moment.images.length === 1 ? 150 : '100%')
            .margin({ bottom: 8 })
          }

          // Êó∂Èó¥ÂíåÊìç‰Ωú
          Row() {
            Text(moment.time)
              .fontSize(13)
              .fontColor('#999999')

            Blank()

            Row() {
              Text('‚ù§Ô∏è')
                .fontSize(16)
                .margin({ right: 4 })

              Text(moment.likeCount.toString())
                .fontSize(13)
                .fontColor('#999999')

              Text('üí¨')
                .fontSize(16)
                .margin({ left: 12, right: 4 })

              Text(moment.commentCount.toString())
                .fontSize(13)
                .fontColor('#999999')
            }
          }
          .width('100%')
        }
        .layoutWeight(1)
        .alignItems(HorizontalAlign.Start)
      }
      .width('100%')
      .alignItems(VerticalAlign.Top)
      .padding(16)
    }
    .width('100%')
    .backgroundColor('#FFFFFF')
  }

  build() {
    Column() {
      // È°∂ÈÉ®ÂØºËà™Ê†è
      Row() {
        Image($r('sys.media.ohos_ic_public_arrow_left'))
          .width(24)
          .height(24)
          .onClick(() => {
            router.back()
          })

        Text('ÊúãÂèãÂúà')
          .fontSize(18)
          .fontWeight(FontWeight.Medium)
          .margin({ left: 16 })
          .layoutWeight(1)

        Image($r('sys.media.ohos_ic_public_camera'))
          .width(24)
          .height(24)
          .onClick(() => {
            router.pushUrl({ url: 'pages/PublishMomentPage' })
          })
      }
      .width('100%')
      .height(56)
      .padding({ left: 16, right: 16 })
      .backgroundColor('#FFFFFF')

      // ‰∏™‰∫∫‰ø°ÊÅØÂç°Áâá
      Stack() {
        // ËÉåÊôØÂõæ - ‰ΩøÁî®Ê∏êÂèòËâ≤Âç†‰Ωç
        Column()
          .width('100%')
          .height(200)
          .linearGradient({
            colors: [[0x07C160, 0.0], [0x576B95, 1.0]]
          })

        // ‰∏™‰∫∫‰ø°ÊÅØ
        Row() {
          Blank()

          Column() {
            Text('ÂæÆ‰ø°Áî®Êà∑')
              .fontSize(18)
              .fontColor('#FFFFFF')
              .fontWeight(FontWeight.Medium)
              .margin({ bottom: 8 })

            Text('Êàë')
              .width(70)
              .height(70)
              .borderRadius(8)
              .backgroundColor('#07C160')
              .fontColor('#FFFFFF')
              .fontSize(32)
              .textAlign(TextAlign.Center)
              .border({ width: 2, color: '#FFFFFF' })
          }
          .alignItems(HorizontalAlign.End)
        }
        .width('100%')
        .height(200)
        .padding(16)
        .alignItems(VerticalAlign.Bottom)
      }
      .width('100%')

      // ÊúãÂèãÂúàÂàóË°®
      if (this.momentList.length > 0) {
        List() {
          ForEach(this.momentList, (moment: Moment) => {
            ListItem() {
              this.MomentItem(moment)
            }
          })
        }
        .width('100%')
        .layoutWeight(1)
        .backgroundColor('#EDEDED')
        .divider({ strokeWidth: 8, color: '#EDEDED' })
      } else {
        Column() {
          Text('ÊöÇÊó†Âä®ÊÄÅ')
            .fontSize(16)
            .fontColor('#999999')
        }
        .width('100%')
        .layoutWeight(1)
        .justifyContent(FlexAlign.Center)
        .backgroundColor('#EDEDED')
      }
    }
    .width('100%')
    .height('100%')
    .backgroundColor('#EDEDED')
  }
}
